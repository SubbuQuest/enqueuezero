(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{285:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode.com/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"}},[t._v("leetcode.com"),e("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("Given an array of integers, return indices of the two numbers such that they add up to a specific target.")]),t._v(" "),e("p",[t._v("You may assume that each input would have exactly one solution, and you may not use the same element twice.")]),t._v(" "),e("p",[t._v("Example:")]),t._v(" "),t._m(2),t._m(3),t._v(" "),e("p",[t._v("Based on the description, we can conclude a formal description of the question, which will be the cornerstone of our solution.")]),t._v(" "),t._m(4),e("p",[t._v("Let's start from a brute-force algorithm.")]),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),e("p",[t._v("Since the time complexity is not good at all, we now seek if it can be improved.")]),t._v(" "),e("hr"),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),e("p",[t._v("Here,  every value of x should have corresponding value y, such that f(x) = y, and every value of y should be unique.")]),t._v(" "),e("hr"),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),e("p",[t._v("So far, we have a transformation of above formal description of the problem.")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),e("p",[t._v("By analyzing this piece of code, the time complexity is O(n) and the space complexity is O(n). Therefore it's a better solution than our brute-force solution.")]),t._v(" "),e("p",[t._v("Below is the proof of its correctness.")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"two-sum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#two-sum","aria-hidden":"true"}},[this._v("#")]),this._v(" Two Sum")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"question"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#question","aria-hidden":"true"}},[this._v("#")]),this._v(" Question")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Given nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"solutions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solutions","aria-hidden":"true"}},[this._v("#")]),this._v(" Solutions")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Given nums, exist i and j: nums[i] + nums[j] = target, 0 <= i < len(nums), 0 <= j < len(nums), i ≠ j.\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("twoSum")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" j "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" Exception"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"twosum solution not found."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Let's analyze this brute-force algorithm. The time complexity is O(n"),s("sup",[this._v("2")]),this._v(") and the space complexity is O(1). Below is a short proof that it's a correct algorithm.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("The returning statement is within the context of the predicate expression, such that\n"),e("ul",[e("li",[t._v("i != j, so it's under the condition of "),e("code",[t._v("i ≠ j")]),t._v(".")]),t._v(" "),e("li",[t._v("nums[i] + nums[j] == target, so it's under the condition of "),e("code",[t._v("nums[i] + nums[j] = target")]),t._v(".")]),t._v(" "),e("li",[t._v("Both variables "),e("code",[t._v("i")]),t._v(" and "),e("code",[t._v("j")]),t._v(" are from "),e("code",[t._v("range(len(nums))")]),t._v(", so they're under the condition of "),e("code",[t._v("0 <= i < len(nums)")]),t._v(" and "),e("code",[t._v("0 <= j < len(nums)")]),t._v(".")])])]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("raise Exception")]),t._v(" statement aborts the process and hence any other solution will not be considered.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("By moving "),s("code",[this._v("nums[j]")]),this._v(" to the right side, we get:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("nums[i] = target - nums[j]\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Then, by applying "),s("code",[this._v("f")]),this._v(" to the both side, we get:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("f(nums[i]) = f(target - nums[j])\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("You might say it's hard to find such function "),s("code",[this._v("f")]),this._v(". But fortunately, there is one that you might have seen and used on a daily basis - "),s("code",[this._v("dict.get")]),this._v(", the getter function of the data structure dictionary (or HashMap, table, whatever).")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("We can also let "),s("code",[this._v("dict[num] = index")]),this._v(", since every index of the num in array nums is unique.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Given dict D, array nums,\n\n* any j: D.get(nums[j]) = j, 0 <= j < lens(nums).\n* exist i: D.get(target - nums[j]) = i, iff target - nums[j] in D.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("We can produce below code. Note that the first highlighted code satisfies "),s("code",[this._v("exist i")]),this._v(" condition, and the second highlighted code satisfies "),s("code",[this._v("any j")]),this._v(" condition.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-py extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("twoSum")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    D "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" target "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" D"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i = D.get(nums[i]) = D.get(target - nums[j])")]),t._v("\n            i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" D"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            D"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nums"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" Exception"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"twoSum not found"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("The returning statement is under predicate "),e("code",[t._v("if target - nums[j] in D:")]),t._v(", so it's under the condition of "),e("code",[t._v("iff target - nums[j] in D")]),t._v(".\n"),e("ul",[e("li",[t._v("The assignment of variable "),e("code",[t._v("i")]),t._v(" matches the existence condition of i.")])])]),t._v(" "),e("li",[t._v("The assignment statement in the else branch establishes the truth of "),e("code",[t._v("any j: D.get(nums[j]) = j, 0 <= j < lens(nums)")]),t._v(".")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"lesson-learned"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lesson-learned","aria-hidden":"true"}},[this._v("#")]),this._v(" Lesson Learned")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Reducing variables in the problem is the key to a simpler solution.")])])}],!1,null,null,null);s.default=a.exports}}]);