(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{260:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p"),t._m(1),s("p"),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("A fuzzy search is a process that locates or filter items by given an approximate\nsimilar query string. It's done using approximate string matching algorithms.")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/ctrlpvim/ctrlp.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctrlpvim/ctrlp.vim"),s("OutboundLink")],1),t._v(" is a vim plugin that\nsupports full path fuzzy finding.")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("Such a plugin helps finding specific files faster.")]),t._v(" "),t._m(7),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/junegunn/fzf",target:"_blank",rel:"noopener noreferrer"}},[t._v("junegunn/fzf"),s("OutboundLink")],1),t._v(" is a general-purpose command-line\nFuzzy finder. It can fuzzily process any list like files, command history, etc.")]),t._v(" "),s("p",[t._v("Such utility help typing commands faster.")]),t._v(" "),t._m(8),t._v(" "),s("p",[t._v("// Assume you know what it is.")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),s("p",[t._v("The formal definition of approximate string matching can be as below:")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),s("p",[t._v("Some of the most well-known algorithms for the distance calculation includes:")]),t._v(" "),t._m(13),t._v(" "),s("p",[t._v("Another approach is using "),s("a",{attrs:{href:"https://www.cse.unsw.edu.au/~weiw/project/tutorial-simjoin-SEBD08.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("string similarity join algorithm"),s("OutboundLink")],1),t._v(".")]),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("Example code:")]),t._v(" "),t._m(15),t._m(16),t._v(" "),s("p",[t._v("In general, the hamming distance is impractical, but it's helpful to learn other distance algorithms.")]),t._v(" "),t._m(17),t._v(" "),s("p",[t._v("Levenshtein distance, also called edit distance, calculates the number of\noperations including deletion, insertion, and substitution between the\ngiven query and the given term.")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("Damerau-Levenshtein distance is a variation of Levenshtein distance by adding\nan extra rule - transposition of two adjacent letters also counts as one\nof the operations, alongside with insertion, deletion, and substitution.")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),s("p",[t._v("An example implementation is here:\n"),s("a",{attrs:{href:"https://gist.github.com/soasme/22c6f083bc971ff381724fd3308a4be2",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gist.github.com/soasme/22c6f083bc971ff381724fd3308a4be2"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("The disadvantage of Bitap is that it requires a fixed-length bit bucket for calculation.\nThe algorithm supports a large bit bucket, however, has poor performance when it's long.\nLuckily, in most cases, the search term has only a few characters.")]),t._v(" "),t._m(26),t._v(" "),s("p",[t._v("Bigram comparing works well on variable length strings.\nThe idea is to de-composite the string into a set of bigrams - words that are\nwritten with two letters in an alphabetic writing system.")]),t._v(" "),s("p",[t._v("For example, "),s("code",[t._v("enqueuezero")]),t._v(" can be transformed to "),s("code",[t._v("en")]),t._v(", "),s("code",[t._v("nq")]),t._v(", "),s("code",[t._v("qu")]),t._v(", "),s("code",[t._v("ue")]),t._v(", ..., "),s("code",[t._v("ro")]),t._v(".\nWe then calculate the number of same bigrams in both query and string to match.\nBelow is an example of Python implementation. "),s("a",{attrs:{href:"https://stackoverflow.com/questions/653157/a-better-similarity-ranking-algorithm-for-variable-length-strings",target:"_blank",rel:"noopener noreferrer"}},[t._v("1"),s("OutboundLink")],1)]),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),s("p",[t._v("Installing fuzzy search plugin or utilities save a few seconds every time and thus several\nhours and days in your work and life.")]),t._v(" "),t._m(30),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://whatis.techtarget.com/definition/fuzzy-search",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fuzzy Search"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Approximate_string_matching",target:"_blank",rel:"noopener noreferrer"}},[t._v("Approximate string matching"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bitap_algorithm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitap Algorithm"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.python.org/3/library/difflib.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("difflib â€” Helpers for computing deltas"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://ntz-develop.blogspot.com/2011/03/fuzzy-string-search.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fuzzy string search"),s("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"fuzzy-search"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fuzzy-search","aria-hidden":"true"}},[this._v("#")]),this._v(" Fuzzy Search")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#overview"}},[t._v("Overview")])]),s("li",[s("a",{attrs:{href:"#solutions"}},[t._v("Solutions")]),s("ul",[s("li",[s("a",{attrs:{href:"#ctrlp-vim"}},[t._v("ctrlp.vim")])]),s("li",[s("a",{attrs:{href:"#fzf"}},[t._v("fzf")])]),s("li",[s("a",{attrs:{href:"#spellcheck"}},[t._v("spellcheck")])])])]),s("li",[s("a",{attrs:{href:"#patterns"}},[t._v("Patterns")]),s("ul",[s("li",[s("a",{attrs:{href:"#approximate-string-matching"}},[t._v("Approximate String Matching")])]),s("li",[s("a",{attrs:{href:"#hamming-distance"}},[t._v("Hamming Distance")])]),s("li",[s("a",{attrs:{href:"#levenshtein-distance"}},[t._v("Levenshtein Distance")])]),s("li",[s("a",{attrs:{href:"#damerau-levenshtein-distance"}},[t._v("Damerau-Levenshtein distance")])]),s("li",[s("a",{attrs:{href:"#difflib"}},[t._v("difflib")])]),s("li",[s("a",{attrs:{href:"#bitap"}},[t._v("Bitap")])]),s("li",[s("a",{attrs:{href:"#bigram-comparing"}},[t._v("Bigram Comparing")])])])]),s("li",[s("a",{attrs:{href:"#conclusions"}},[t._v("Conclusions")])]),s("li",[s("a",{attrs:{href:"#references"}},[t._v("References")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"solutions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solutions","aria-hidden":"true"}},[this._v("#")]),this._v(" Solutions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"ctrlp-vim"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ctrlp-vim","aria-hidden":"true"}},[this._v("#")]),this._v(" ctrlp.vim")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("By typing "),e("code",[this._v("ctrl+p")]),this._v(" in normal mode, you can fuzzy find files by your inputs. For example,\ntyping "),e("code",[this._v("mo")]),this._v(" would possibly match below files:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("strong",[t._v("mo")]),t._v("dified.txt")]),t._v(" "),s("li",[t._v("colors/"),s("strong",[t._v("mo")]),t._v("lokai.vim")]),t._v(" "),s("li",[t._v("docs/easy"),s("strong",[t._v("mo")]),t._v("tion.txt")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"fzf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fzf","aria-hidden":"true"}},[this._v("#")]),this._v(" fzf")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"spellcheck"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spellcheck","aria-hidden":"true"}},[this._v("#")]),this._v(" spellcheck")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"patterns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patterns","aria-hidden":"true"}},[this._v("#")]),this._v(" Patterns")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"approximate-string-matching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#approximate-string-matching","aria-hidden":"true"}},[this._v("#")]),this._v(" Approximate String Matching")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Find in the text or dictionary of size "),e("strong",[this._v("n")]),this._v(" all the words that match the given word\n(or start with the given word), taking into account "),e("strong",[this._v("k")]),this._v(" possible differences (errors).")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("The closeness of "),s("em",[t._v("approximate")]),t._v(" is measured by the distance, the number of minimal\nstring operations necessary to convert a query to the string to match. For example,\nthe editors know that you have a "),s("em",[t._v("typa")]),t._v(" and decide to pop up "),s("em",[t._v("typo")]),t._v(" as a suggestion,\nbecause "),s("em",[t._v("typa")]),t._v(" has only one character to be substituted.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Hamming distance.")]),this._v(" "),e("li",[this._v("Levenshtein distance, or edit distance.")]),this._v(" "),e("li",[this._v("Damerau-Levenshtein distance.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"hamming-distance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hamming-distance","aria-hidden":"true"}},[this._v("#")]),this._v(" Hamming Distance")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hamming_distance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Return the Hamming distance between equal-length sequences"""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ValueError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Undefined for sequences of unequal length"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" el2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" el1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" el2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Pros\n"),e("ul",[e("li",[this._v("Easy to understand.")])])]),this._v(" "),e("li",[this._v("Cons\n"),e("ul",[e("li",[this._v("Only for calculating a set of words of equal length.")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"levenshtein-distance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levenshtein-distance","aria-hidden":"true"}},[this._v("#")]),this._v(" Levenshtein Distance")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("For example, a minimal edit script that transforms "),e("code",[this._v("enqueuezero")]),this._v(" to "),e("code",[this._v("enqueuezebra")]),this._v(" is 2:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Insert "),s("strong",[t._v("b")]),t._v(": enqueueze"),s("strong",[t._v("b")]),t._v("ro.")]),t._v(" "),s("li",[t._v("Substitute "),s("strong",[t._v("o")]),t._v(" to "),s("strong",[t._v("a")]),t._v(": enqueuezebr"),s("strong",[t._v("a")]),t._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"damerau-levenshtein-distance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#damerau-levenshtein-distance","aria-hidden":"true"}},[this._v("#")]),this._v(" Damerau-Levenshtein distance")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"difflib"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#difflib","aria-hidden":"true"}},[this._v("#")]),this._v(" difflib")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Python function "),e("code",[this._v("difflib.get_close_matches")]),this._v(' returns a list of the best "good enough" matches. It\'s the quickest scripting function ready to use.')])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" difflib "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" get_close_matches\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get_close_matches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'appel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ape'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'peach'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'puppy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ape'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"bitap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bitap","aria-hidden":"true"}},[this._v("#")]),this._v(" Bitap")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The Bitap algorithm is an approximate string matching algorithm, which tells if\na given text contains a substring that approximately equal to a given pattern.\nIt's fast because it's based on bitwise operations. It's most often used in the fuzzy search. Unix utility "),e("code",[this._v("agrep")]),this._v(" is atop bitap algorithm. The Bitap algorithm\ncan be based on both Hamming distance and Levenshtein distance.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"bigram-comparing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bigram-comparing","aria-hidden":"true"}},[this._v("#")]),this._v(" Bigram Comparing")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_bigrams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_similarity_score")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    query_bigrams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_bigrams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    match_bigrams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_bigrams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    hit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" query_bigrams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" match_bigrams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                hit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query_bigrams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match_bigrams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"conclusions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conclusions","aria-hidden":"true"}},[this._v("#")]),this._v(" Conclusions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Fuzzy search can be applied whenever there is a search box. Under the hood, the fuzzy\nsearch requires approximate string matching. Among all algorithms, the Bitap algorithm\nis perhaps the best-known for approximate string matching.  However, it doesn't\nfit the case in which the searching dataset is huge since it requires a full scanning.\nPython function "),e("code",[this._v("get_close_matches")]),this._v(" in standard lib "),e("code",[this._v("difflib")]),this._v(" is the handiest tool\nready to use.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[this._v("#")]),this._v(" References")])}],!1,null,null,null);e.default=n.exports}}]);