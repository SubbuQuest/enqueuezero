(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{263:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p"),t._m(1),a("p"),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("C function parameter types and return type are nowhere in compiled shared dynamic library. Some other programs may not know what arguments are to be passed to a function in this program.")]),t._v(" "),a("p",[t._v("In Python, we can dynamically load a dynamic library, resolve FuncPointers by symbols of functions and even call it. The only problem is that the program would crash without the right parameters passing into functions.")]),t._v(" "),t._m(3),t._m(4),t._v(" "),a("p",[t._v("[img[ffi-after-dlopen.jpg]]")]),t._v(" "),a("p",[t._v("It's easy to know such information in C by sharing header file definition, but calling it in another language might seems a big challenge.")]),t._v(" "),a("p",[t._v("FFI is a technology that solved this problem.")]),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("FFI, or Foreign Function Interface, allows code written in one language to call code written in another language. The major use case is for dynamic VM languages calling dynamic libraries. For example, Python has CFFI or ctypes, same as Ruby, Java, Lua using it in similar C FFI libraries.")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("FFI code can be described in below steps:")]),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("We'll explain these three later. But let's see some solutions first.")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),a("p",[t._v("The LuaJit FFI library allows calling external C functions and using C data structures from pure Lua code. It parses plain C declarations. The arguments passed to this function are automatically converted from Lua objects to the corresponding C types.")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),a("p",[t._v("Common Lisp has CFFI, which stands for Common Foreign Function Interface.  In Common Lisp, we have something similar in LuaJit but in different looking feels.")]),t._v(" "),t._m(15),a("p",[t._v("Everything expressed in Common Lisp is just in S-expression, even when you're writing CFFI bindings.")]),t._v(" "),t._m(16),t._v(" "),a("p",[t._v("In Pony, you can use FFI directly. The FFI call syntax is very much like a function call with little difference. Below example shows how to call a file write operation directly.")]),t._v(" "),t._m(17),a("p",[t._v("Calling FFI without predefined signatures looks convenient. Nonetheless, it's very dangerous. Without the signature, it might cause some potential bugs. And hence, it's still recommended defining signature first. Pony declare function signature via 'use' keyword.")]),t._v(" "),t._m(18),t._m(19),t._v(" "),a("p",[t._v("libffi a C library for FFI. Many VM languages written in C language use libffi to perform FFI calls.  Below code comes from "),a("a",{attrs:{href:"http://www.chiark.greenend.org.uk/doc/libffi-dev/html/Simple-Example.html#Simple-Example",target:"_blank",rel:"noopener noreferrer"}},[t._v("libffi simple example"),a("OutboundLink")],1),t._v(":")]),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),a("p",[t._v("FFI works by setting machine exchange information for you. Calling function has nothing special but does some simple but non-trivial register value moving. Once done, we extract return value from exchange information.")]),t._v(" "),t._m(24),t._v(" "),a("p",[t._v("ABI, or application binary interface, is on the contrary of API. It's a term describing communications between programs in machine level.")]),t._v(" "),a("p",[t._v("FFI define function signatures by API, but it performs ABI calls.")]),t._v(" "),t._m(25),t._v(" "),a("p",[t._v("VM languages usually have two extra things to do:")]),t._v(" "),t._m(26),t._v(" "),a("p",[t._v("We can easily find such tables in every language FFI implementation:")]),t._v(" "),t._m(27),t._v(" "),a("p",[t._v("Type conversion impacts performance but the impact is small considering below cases:")]),t._v(" "),t._m(28),t._v(" "),a("p",[t._v("The example in "),a("a",{attrs:{href:"http://luajit.org/ext_ffi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LuaJit FFI"),a("OutboundLink")],1),t._v(" shows LuaJit FFI call is 110x faster than in pure Lua interpreter.")]),t._v(" "),t._m(29),t._v(" "),a("p",[t._v("LuaJit and Python support copy-n-pasting C header file when defining function signatures. It's easy to use for users, cause the header file is very easy to find from library source code. The downside is that it needs to parse C code in runtime.")]),t._v(" "),a("p",[t._v("Ruby and Common Lisp use semantic signatures, that is to explicitly define function name, argument types, and return type. Basically, copy-n-pasting can be built on top of semantic signature.")]),t._v(" "),a("p",[t._v("Pony and Rust allow defining signatures in their language code. They compile code anyway, so the language compilers help you do the dirty work. It makes code styling more unified.")]),t._v(" "),t._m(30),t._v(" "),a("p",[t._v("We need the size of values, otherwise, we'll get a different binary sequence. Without getting data aligned, the library will get the wrong data and thus lead the application crash.")]),t._v(" "),a("p",[t._v("For example, in a 32-bit platform, a pointer has 4 bytes; while in a 64-bit platform, a pointer has 8 bytes. Below comparison shows the same pointer value has different results generated when passing to the dynamic library.")]),t._v(" "),t._m(31),a("p",[t._v("It's also essential to align some insufficient values to minimum size. For example, if a value has 6 bytes size in a 64-bit platform, we need to add zero padding so that it has a minimum of 8 bytes.")]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),a("p",[t._v("In C code, we often write Function Pointers. For example, in libuv, we have below definitions:")]),t._v(" "),t._m(35),a("p",[t._v("It's essential to have a way to map VM functions into FFI functions. Luckily, we have "),a("a",{attrs:{href:"http://www.chiark.greenend.org.uk/doc/libffi-dev/html/The-Closure-API.html#The-Closure-API",target:"_blank",rel:"noopener noreferrer"}},[t._v("ffi_closure"),a("OutboundLink")],1),t._v(" to achieve that. It enables arbitrary functions to be passed into an FFI call. You need to do below things:")]),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),a("p",[t._v("You don't need to care about memory management due to GC is usually built-in in VM language. However, when writing FFI calls, you need to worry about low-level memory management problem.")]),t._v(" "),a("p",[t._v("There is no C stack in FFI. All data live either in the native heap or VM-managed heap. Free those useless when becomes useless.")]),t._v(" "),t._m(38),t._v(" "),a("p",[t._v("Some C operations are not thread-safe. Be careful when calling them when you're writing concurrency.")]),t._v(" "),t._m(39),t._v(" "),a("ul",[a("li",[t._v("Advantage\n"),a("ul",[a("li",[t._v("Very good performance, as long as your C code not sucks.")]),t._v(" "),a("li",[t._v("Reuse whatsoever in-place in the system.")]),t._v(" "),a("li",[t._v("Easily port C library to another VM language. For example, "),a("a",{attrs:{href:"https://www.imagemagick.org/script/api.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImageMagick"),a("OutboundLink")],1),t._v(" can be integrated into almost every VM language via FFI without changing C code.")])])]),t._v(" "),t._m(40)]),t._v(" "),t._m(41),t._v(" "),a("p",[t._v("If you have performance bottleneck when running the CPU-intensive calculation in VM language, and ALSO feels VM interpreter runs so slow, take a look at FFI! If you want to write your own interpreter language, also try to integrate libffi as a bonus!")]),t._v(" "),t._m(42),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://eli.thegreenplace.net/2013/03/04/flexible-runtime-interface-to-shared-libraries-with-libffi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flexible runtime interface to shared libraries with libffi"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ffi/ffi/wiki/Why-use-FFI",target:"_blank",rel:"noopener noreferrer"}},[t._v("Why use FFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://luajit.org/ext_ffi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LuaJit - FFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cffi.readthedocs.io/en/latest/overview.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python - CFFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.chiark.greenend.org.uk/doc/libffi-dev/html/Using-libffi.html#Using-libffi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Using LibFFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://stackoverflow.com/questions/5963266/call-c-function-from-java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java JNI example"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://tutorial.ponylang.org/c-ffi/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pony - FFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://doc.rust-lang.org/book/first-edition/ffi.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust - FFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://common-lisp.net/project/cffi/manual/cffi-manual.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommonLisp - FFI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://gist.github.com/soasme/1ddbf4de79e341cbf2e0cf7357a166f7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example of source code in this post"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://techbrahmana.blogspot.com/2008/08/how-libffi-actually-works.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How libffi actually works?"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"ffi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ffi","aria-hidden":"true"}},[this._v("#")]),this._v(" FFI")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#context"}},[t._v("Context")])]),a("li",[a("a",{attrs:{href:"#overview"}},[t._v("Overview")])]),a("li",[a("a",{attrs:{href:"#solutions"}},[t._v("Solutions")]),a("ul",[a("li",[a("a",{attrs:{href:"#luajit-ffi"}},[t._v("LuaJit - FFI")])]),a("li",[a("a",{attrs:{href:"#common-lisp-ffi"}},[t._v("Common Lisp - FFI")])]),a("li",[a("a",{attrs:{href:"#pony-ffi"}},[t._v("Pony - FFI")])]),a("li",[a("a",{attrs:{href:"#c-libffi"}},[t._v("C - libffi")])])])]),a("li",[a("a",{attrs:{href:"#patterns"}},[t._v("Patterns")]),a("ul",[a("li",[a("a",{attrs:{href:"#how-it-works"}},[t._v("How it works")])]),a("li",[a("a",{attrs:{href:"#abi-v-s-api"}},[t._v("ABI v/s API")])]),a("li",[a("a",{attrs:{href:"#type-conversion"}},[t._v("Type Conversion")])]),a("li",[a("a",{attrs:{href:"#c-headers-copy-n-paste-v-s-semantic-signature"}},[t._v("C Headers Copy-n-Paste v/s Semantic Signature")])]),a("li",[a("a",{attrs:{href:"#alignment-in-32-bit-v-s-64-bit"}},[t._v("!!! Alignment in 32-bit v/s 64-bit")])]),a("li",[a("a",{attrs:{href:"#long-long"}},[t._v("Long Long")])]),a("li",[a("a",{attrs:{href:"#callback"}},[t._v("Callback")])]),a("li",[a("a",{attrs:{href:"#garbage-collect"}},[t._v("Garbage Collect")])]),a("li",[a("a",{attrs:{href:"#thread-safe-v-s-thread-unsafe"}},[t._v("Thread-safe v/s Thread-unsafe")])]),a("li",[a("a",{attrs:{href:"#advantage-and-disadvantage"}},[t._v("Advantage and Disadvantage")])])])]),a("li",[a("a",{attrs:{href:"#conclusions"}},[t._v("Conclusions")])]),a("li",[a("a",{attrs:{href:"#references"}},[t._v("References")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context","aria-hidden":"true"}},[this._v("#")]),this._v(" Context")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ctypes\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" libc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CDLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'libc.dylib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" libc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atoi\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_FuncPtr "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" at "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x100a509a8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" libc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atoi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" libc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atoi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("47162")]),t._v(" segmentation fault  python\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The reason is simple. Everything in the dynamic library is machine instruction. We have registers like "),e("code",[this._v("%esi")]),this._v(", "),e("code",[this._v("%xmm0")]),this._v(" in dynamic library, but no "),e("code",[this._v("const point_t* p1, const point_t* p2")]),this._v(" at all.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Basically after dynamically loaded and resolved symbols in "),e("code",[this._v(".so")]),this._v(" or "),e("code",[this._v(".ddl")]),this._v(" file, we use FFI constructing foreign function call.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Define FFI signatures.")]),this._v(" "),e("li",[this._v("Construct FFI exchange.")]),this._v(" "),e("li",[this._v("Perform FFI call.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"solutions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solutions","aria-hidden":"true"}},[this._v("#")]),this._v(" Solutions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"luajit-ffi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#luajit-ffi","aria-hidden":"true"}},[this._v("#")]),this._v(" LuaJit - FFI")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Below is the "),e("code",[this._v("hello world")]),this._v(" example.")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-lua extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" ffi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ffi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Define FFI signatures")]),t._v("\nffi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdef"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("[[\nint printf(const char *fmt, ...);\n]]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Construct FFI exchange and Perform FFI call")]),t._v("\nffi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello %s!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ffi.cdef")]),this._v(" also supports defining c structs. LuaJit needs to remember the essential field names and field byte size for the function call.")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-lua extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Guide LuaJit how to setup FFI exchange.")]),t._v("\nffi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdef"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("[[\ntypedef struct point point_t;\nstruct point {\n  double x;\n  double y;\n};\n]]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Setup FFI exchange")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" points "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ffi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"point_t[?]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npoints"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\npoints"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"common-lisp-ffi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-lisp-ffi","aria-hidden":"true"}},[this._v("#")]),this._v(" Common Lisp - FFI")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-lisp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lisp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token heading comment title"}},[t._v(";;; load cffi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("asdf")]),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":load-system")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":cffi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("defpackage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":cffi-user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":common-lisp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":cffi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token heading comment title"}},[t._v(";;; load the library")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("define-foreign-library")]),t._v(" libc\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"libc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token heading comment title"}},[t._v(";;; use the library")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("use-foreign-library")]),t._v(" libc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token heading comment title"}},[t._v(";;; define FFI signature")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("defcfun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"printf"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token lisp-property property"}},[t._v(":pointer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" &rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token heading comment title"}},[t._v(";;; construct FFI exchange and perform FFI call")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pony-ffi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pony-ffi","aria-hidden":"true"}},[this._v("#")]),this._v(" Pony - FFI")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-pony extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("@fwrite[U64](data.cstring(), U64(1), data.size(), _handle)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-pony extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// define FFI signature\nuse @fwrite[U64](ptr: Pointer[U8] tag, size: U64, count: U64, stream: Pointer[U8] tag)\n\n// construct FFI exchange and perform FFI call\n@fwrite[U64](data.cstring(), U64(1), data.size(), _handle)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"c-libffi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-libffi","aria-hidden":"true"}},[this._v("#")]),this._v(" C - libffi")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<ffi.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ffi_cif cif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ffi_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ffi_arg rc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Initialize the argument info vectors */")]),t._v("    \n  args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ffi_type_pointer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Initialize the cif */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ffi_prep_cif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FFI_DEFAULT_ABI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ffi_type_sint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" FFI_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ffi_call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" puts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("rc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rc now holds the result of the call to puts */")]),t._v("\n      \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* values hold a pointer to the function's arg, so to \n         call puts() again all we need to do is change the \n         value of s */")]),t._v("\n      s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is cool!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ffi_call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" puts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("rc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("It has a set of "),a("code",[t._v("ffi_")]),t._v(" prefixed functions. Especially, "),a("code",[t._v("ffi_prep_cif")]),t._v(" is used to define signatures, "),a("code",[t._v("ffi_prep_cif_var")]),t._v(" is used to define signatures for those varargs needed, "),a("code",[t._v("ffi_call")]),t._v(" is for making calls.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"patterns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patterns","aria-hidden":"true"}},[this._v("#")]),this._v(" Patterns")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"how-it-works"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works","aria-hidden":"true"}},[this._v("#")]),this._v(" How it works")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"abi-v-s-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abi-v-s-api","aria-hidden":"true"}},[this._v("#")]),this._v(" ABI v/s API")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"type-conversion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-conversion","aria-hidden":"true"}},[this._v("#")]),this._v(" Type Conversion")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Before calling "),e("code",[this._v("ffi_call")]),this._v(", convert language types into FFI types.")]),this._v(" "),e("li",[this._v("After calling "),e("code",[this._v("ffi_call")]),this._v(", convert FFI types back to language types.")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("table",[a("thead",[a("tr",[a("th",[t._v("ffi types")]),t._v(" "),a("th",[t._v("language types")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("double,float")]),t._v(" "),a("td",[t._v("number")])]),t._v(" "),a("tr",[a("td",[t._v("char *")]),t._v(" "),a("td",[t._v("string")])]),t._v(" "),a("tr",[a("td",[t._v("book")]),t._v(" "),a("td",[t._v("boolean")])]),t._v(" "),a("tr",[a("td",[t._v("struct")]),t._v(" "),a("td",[t._v("class")])]),t._v(" "),a("tr",[a("td",[t._v("...")]),t._v(" "),a("td",[t._v("...")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Very slow: implement everything in VM languages.")]),this._v(" "),e("li",[this._v("Very fast: implement slow operations in C, and then make FFI calls in VM languages.")]),this._v(" "),e("li",[this._v("Fastest: implement everything in C, or in assembly if you like. 😃")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"c-headers-copy-n-paste-v-s-semantic-signature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-headers-copy-n-paste-v-s-semantic-signature","aria-hidden":"true"}},[this._v("#")]),this._v(" C Headers Copy-n-Paste v/s Semantic Signature")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"alignment-in-32-bit-v-s-64-bit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alignment-in-32-bit-v-s-64-bit","aria-hidden":"true"}},[this._v("#")]),this._v(" !!! Alignment in 32-bit v/s 64-bit")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# in 32-bit\n0x00000000111111110000000011111111\n\n# in 64-bit\n0x0000000011111111000000001111111100000000111111110000000011111111\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"long-long"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long-long","aria-hidden":"true"}},[this._v("#")]),this._v(" Long Long")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Not every platform support types like "),e("code",[this._v("long long")]),this._v(".  FFI libraries might need to implement that internally. When using the FFI library, watch out if you can use this feature.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"callback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#callback","aria-hidden":"true"}},[this._v("#")]),this._v(" Callback")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("uv_walk_cb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uv_handle_t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uv_walk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uv_loop_t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" loop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uv_walk_cb walk_cb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("allocate memory for ffi_closure")]),this._v(" "),e("li",[this._v("set a ffi_closure pointer into the exchange.")]),this._v(" "),e("li",[this._v("free memory for ffi_closure")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"garbage-collect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#garbage-collect","aria-hidden":"true"}},[this._v("#")]),this._v(" Garbage Collect")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"thread-safe-v-s-thread-unsafe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thread-safe-v-s-thread-unsafe","aria-hidden":"true"}},[this._v("#")]),this._v(" Thread-safe v/s Thread-unsafe")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"advantage-and-disadvantage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#advantage-and-disadvantage","aria-hidden":"true"}},[this._v("#")]),this._v(" Advantage and Disadvantage")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("Disadvantage\n"),e("ul",[e("li",[this._v("Introduce system dependency.")]),this._v(" "),e("li",[this._v("Portability. Some interfaces might not work in another platform or architect. For example, you can't use Windows "),e("code",[this._v("MessageBoxA")]),this._v(" in Linux.")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"conclusions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conclusions","aria-hidden":"true"}},[this._v("#")]),this._v(" Conclusions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[this._v("#")]),this._v(" References")])}],!1,null,null,null);e.default=n.exports}}]);