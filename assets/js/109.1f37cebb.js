(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{207:function(e,t,n){"use strict";n.r(t);var o=n(0),s=Object(o.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),n("p",[e._v("If I were to read the source code of a project, I would start from the entry point. The entry point of ZeroMQ is "),n("a",{attrs:{href:"https://github.com/zeromq/libzmq/blob/master/include/zmq.h",target:"_blank",rel:"noopener noreferrer"}},[e._v("zmq.h"),n("OutboundLink")],1),e._v(" and "),n("a",{attrs:{href:"https://github.com/zeromq/libzmq/blob/master/src/zmq.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("zmq.cpp"),n("OutboundLink")],1),e._v(", which provides a high-level interface to end users. Starting from these two files, we can get a quick glance on how various modules are scattered and compiled.")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("To better understand how ZeroMQ works, it's essential to understand some fundamental concepts.")]),e._v(" "),e._m(3)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"zeromq-entry-point"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zeromq-entry-point","aria-hidden":"true"}},[this._v("#")]),this._v(" ZeroMQ Entry Point")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("There are some context related functions ("),n("code",[e._v("ctx_")]),e._v("), message related functions ("),n("code",[e._v("msg_")]),e._v("), poller related functions ("),n("code",[e._v("zmq_poller_")]),e._v("), and most importantly socket related functions ("),n("code",[e._v("zmq_socket")]),e._v(", "),n("code",[e._v("zmq_bind")]),e._v(", "),n("code",[e._v("zmq_connect")]),e._v(", "),n("code",[e._v("zmq_send")]),e._v(", "),n("code",[e._v("zmq_recv")]),e._v("), etc. The header file "),n("code",[e._v("zmq.h")]),e._v(" serves as a contract to the ZeroMQ users and hence the stability is the most concerned thing. If there is ever a change in the file, it must not break existing applications.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("The cpp file "),n("code",[e._v("zmq.cpp")]),e._v(" exposes internal modules as stable APIs. Most of the implementations of "),n("code",[e._v("zmq_xyz_abc")]),e._v(" map to "),n("code",[e._v("(static_cast<zmq::xyz *> (xyz_))->abc")]),e._v(" or "),n("code",[e._v("zmq::xyz_t *s = ...; s->abc(...);")]),e._v(", with some additional error code handling. The lines of code is quite a lot but the code is easy to understand.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("In main thread, user creates a singleton object "),n("strong",[e._v("zmq.Context()")]),e._v(" holds the global state and is accessible by all the sockets and all the asynchronous objects in worker threads.")]),e._v(" "),n("li",[e._v("In worker threads, user creates socket objects from the context. Internally, ZeroMQ maintains various objects in each worker thread.\n"),n("ul",[n("li",[e._v("The "),n("strong",[e._v("Listener")]),e._v(" listens for the incoming connections and creates an engine/session object for each new connection.")]),e._v(" "),n("li",[e._v("The "),n("strong",[e._v("Connector")]),e._v(" attempts to connect to a peer and maintain an engine/session object for each connection.")]),e._v(" "),n("li",[e._v("The "),n("strong",[e._v("Engine")]),e._v(" is responsible for communicating over the network.")]),e._v(" "),n("li",[e._v("The "),n("strong",[e._v("Session")]),e._v(" exchanges messages through pipes.")]),e._v(" "),n("li",[e._v("Each "),n("strong",[e._v("Pipe")]),e._v(" is basically a lock-free queue optimized for fast passing of messages between threads.")])])])])}],!1,null,null,null);t.default=s.exports}}]);